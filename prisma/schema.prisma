generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminId      Int      @id @default(autoincrement()) @map("ADMIN_ID")
  adminName    String   @map("ADMIN_NAME") @db.VarChar(255)
  adminSurname String   @map("ADMIN_SURNAME") @db.VarChar(255)
  adminEmail   String   @map("ADMIN_EMAIL") @db.VarChar(255)
  username     String   @unique @map("USERNAME") @db.VarChar(40)
  password     String   @map("PASSWORD") @db.VarChar(60)
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("ADMIN")
}

model Interpreter {
  interpreterId      Int           @id @default(autoincrement()) @map("INTERPRETER_ID")
  interpreterName    String        @map("INTERPRETER_NAME") @db.VarChar(255)
  interpreterSurname String        @map("INTERPRETER_SURNAME") @db.VarChar(255)
  interpreterPhone   String        @map("INTERPRETER_PHONE") @db.VarChar(15)
  interpreterEmail   String        @unique @map("INTERPRETER_EMAIL") @db.VarChar(255)
  createdAt          DateTime      @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt          DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  bookingPlans       BookingPlan[]

  @@map("INTERPRETER")
}

model BookingPlan {
  bookingId     Int               @id @default(autoincrement()) @map("BOOKING_ID")
  ownerName     String            @map("OWNER_NAME") @db.VarChar(255)
  ownerSurname  String            @map("OWNER_SURNAME") @db.VarChar(255)
  ownerEmail    String            @map("OWNER_EMAIL") @db.VarChar(255)
  ownerTel      String            @map("OWNER_TEL") @db.VarChar(15)
  ownerGroup    OwnerGroup        @map("OWNER_GROUP")
  meetingRoom   String            @map("MEETING_ROOM") @db.VarChar(50)
  meetingDetail String?           @map("MEETING_DETAIL") @db.Text
  highPriority  Boolean           @default(false) @map("HIGH_PRIORITY")
  timeStart     DateTime          @map("TIME_START") @db.DateTime(0)
  timeEnd       DateTime          @map("TIME_END") @db.DateTime(0)
  interpreterId Int?              @map("INTERPRETER_ID")
  bookingStatus BookingStatus     @default(waiting) @map("BOOKING_STATUS")
  createdAt     DateTime          @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  interpreter   Interpreter?      @relation(fields: [interpreterId], references: [interpreterId])
  inviteEmails  InviteEmailList[]

  @@index([interpreterId], map: "BOOKING_PLAN_INTERPRETER_ID_fkey")
  @@map("BOOKING_PLAN")
}

model InviteEmailList {
  emailListId Int         @id @default(autoincrement()) @map("EMAIL_LIST_ID")
  bookingId   Int         @map("BOOKING_ID")
  email       String      @map("EMAIL") @db.VarChar(255)
  invitedAt   DateTime    @default(now()) @map("invited_at") @db.Timestamp(0)
  bookingPlan BookingPlan @relation(fields: [bookingId], references: [bookingId], onDelete: Cascade)

  @@unique([bookingId, email], name: "unique_booking_email")
  @@map("INVITE_EMAIL_LIST")
}

enum OwnerGroup {
  iot
  hardware
  software
  other

  @@map("owner_group")
}

enum BookingStatus {
  approve
  cancel
  waiting

  @@map("booking_status")
}

model Employee {
  id            Int       @id @default(autoincrement()) @map("ID")
  source        String    @map("SOURCE") @db.VarChar(64)
  sourceUserId  String    @map("SOURCE_USER_ID") @db.VarChar(128)
  email         String?   @map("EMAIL") @db.VarChar(255)
  empCode       String?   @map("EMP_CODE") @db.VarChar(64)
  name          String    @map("NAME") @db.VarChar(255)
  phone         String?   @map("PHONE") @db.VarChar(64)
  isActive      Boolean   @default(true) @map("IS_ACTIVE")
  role          String    @default("USER") @map("ROLE") @db.VarChar(32)
  lastLoginAt   DateTime? @map("LAST_LOGIN_AT")
  syncedAt      DateTime? @map("SYNCED_AT")
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  @@unique([source, sourceUserId], map: "uniq_source_user")
  @@map("EMPLOYEE")
}